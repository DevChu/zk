# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "master" ]
  pull_request_target:
    types: [opened, synchronize]
  schedule:
    - cron: '37 4 * * 4'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners
    # Consider using larger runners for possible analysis time improvements.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: java-kotlin
            build-mode: none # This mode only analyzes Java. Set this to 'autobuild' or 'manual' to analyze Kotlin too.
          - language: javascript-typescript
            build-mode: none
          # CodeQL supports the following values keywords for 'language': 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
          # Use `c-cpp` to analyze code written in C, C++ or both
          # Use 'java-kotlin' to analyze code written in Java, Kotlin or both
          # Use 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
          # To learn more about changing the languages that are analyzed or customizing the build mode for your analysis,
          # see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning.
          # If you are analyzing a compiled language, you can modify the 'build-mode' for that language to customize how
          # your codebase is analyzed, see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        config: |
          paths-ignore:
          - '**/*.src.js'

        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

    - name: Set up Java 11
      uses: actions/setup-java@v4
      with:
        distribution: 'adopt'
        java-version: 11
    - name: Use Node.js 20 LTS
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Checkout ZK EE
      uses: actions/checkout@v4
      with:
        repository: zkoss/zkcml
        ref: master
        ssh-key: '${{ secrets.SSH_KEY }}'
        path: zkcml-${{ github.run_id }}-${{ github.run_number }}
    - run: |
        mv zkcml-${{ github.run_id }}-${{ github.run_number }} ../zkcml
        cd ../zkcml
        if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
        elif [ -e package-lock.json ]; then
          npm ci
        else
          npm i
        fi
    - name: Build Latest ZK
      run: |
        sed -i 's/includeBuild/\/\/includeBuild/' settings.gradle
        ./gradlew clean build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
