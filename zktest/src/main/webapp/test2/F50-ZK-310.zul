<zk>
	<zscript><![CDATA[
		import java.util.*;
		import org.zkoss.zul.*;
		
		List list = new ArrayList();
		list.add(new String[]{"item 110","item 110","item 110"});
		list.add(new String[]{"item 11110","item 11110","item 11110"});
		list.add(new String[]{"item 1111110","item 1111110","item 1111110"});
		ListModelList model = new ListModelList(list);	
		
		
		list = new ArrayList();
		
		List list2 = new ArrayList();
		list2.add(new DefaultTreeNode(new String[]{"item 110","item 110","item 110"}));
		list2.add(new DefaultTreeNode(new String[]{"item 11110","item 11110","item 11110"}));
		
		
		list.add(new DefaultTreeNode(new String[]{"item 110","item 110","item 110"}, list2));
		list.add(new DefaultTreeNode(new String[]{"item 11110","item 11110","item 11110"}));
		list.add(new DefaultTreeNode(new String[]{"item 1111110","item 1111110","item 1111110"}));
		DefaultTreeNode rootNode = new DefaultTreeNode(null, list);
		DefaultTreeModel tmodel =  new DefaultTreeModel(rootNode);
		
		
		
		RowRenderer rowRender = new RowRenderer() {
			public void render(Row row, Object data, int index) throws Exception {
				String[] ary = (String[]) data;
				row.appendChild(new Label(ary[0]));
				row.appendChild(new Label(ary[1]));
				row.appendChild(new Label(ary[2]));
			}
		};
		
		
		ListitemRenderer listitemRender = new ListitemRenderer() {
			public void render(Listitem item, Object data, int index) throws Exception {
				String[] ary = (String[]) data;
				item.appendChild(new Listcell(ary[0]));
				item.appendChild(new Listcell(ary[1]));
				item.appendChild(new Listcell(ary[2]));
			}
		};
		
		
		TreeitemRenderer treeitemRender = new TreeitemRenderer() {
			public void render(Treeitem item, Object data, int index) throws Exception {
				String[] ary = (String[]) ((DefaultTreeNode) data).getData();
				Treerow tr;
				if (item.getTreerow() == null) {
					tr = new Treerow();
					tr.setParent(item);
				} else {
					tr = item.getTreerow();
					tr.getChildren().clear();
				}
				tr.appendChild(new Treecell(ary[0]));
				tr.appendChild(new Treecell(ary[1]));
				tr.appendChild(new Treecell(ary[2]));
			}
		};
	]]></zscript>
	<label value="new item: "/><textbox id="tb" value="item 11111111---------0"/>
	<button label="Add items">
		<attribute name="onClick"><![CDATA[
			String value = tb.value;
			model.add(new String[]{value,value,value});
			rootNode.add(new DefaultTreeNode(new String[]{value,value,value}));
			
		]]></attribute>
	</button>
	<button label="remove last">
		<attribute name="onClick"><![CDATA[
			model.remove(model.size()-1);
			
			DefaultTreeNode node = (DefaultTreeNode) tmodel.getChild(
					rootNode, tmodel.getChildCount(rootNode)-1);
			node.removeFromParent();
		]]></attribute>
	</button>
	<button label="resize">
		<attribute name="onClick"><![CDATA[
			Clients.resize(grid);
			Clients.resize(listbox);
			Clients.resize(tree);
			Clients.resize(grid2);
			Clients.resize(listbox2);
			Clients.resize(tree2);
			Clients.resize(grid3);
			Clients.resize(listbox3);
			Clients.resize(tree3);
			Clients.resize(grid4);
			Clients.resize(listbox4);
			Clients.resize(tree4);
			Clients.resize(grid5);
			Clients.resize(listbox5);
			Clients.resize(tree5);
		]]></attribute>
	</button>
	<borderlayout>
		<west width="400px" splittable="true">
			<div>
				<grid id="grid" model="${model}" rowRenderer="${rowRender}" style="white-space: nowrap;">
					<columns>
						<column label="column 1" hflex="min"/>
						<column label="column 2" hflex="1"/>
						<column label="column 3" hflex="2"/>
					</columns>
				</grid>
				<listbox id="listbox" model="${model}" itemRenderer="${listitemRender}" style="white-space: nowrap;">
					<listhead>
						<listheader label="column 1" hflex="min"/>
						<listheader label="column 2" hflex="1"/>
						<listheader label="column 3" hflex="2"/>
					</listhead>
					
				</listbox>
				<tree id="tree" model="${tmodel}" itemRenderer="${treeitemRender}" style="white-space: nowrap;">
					<treecols>
						<treecol label="column 1" hflex="min"/>
						<treecol label="column 2" hflex="1"/>
						<treecol label="column 3" hflex="2"/>
					</treecols>
				</tree>
				<grid id="grid2" model="${model}" rowRenderer="${rowRender}" style="white-space: nowrap;">
					<columns>
						<column hflex="min"/>
						<column hflex="1"/>
						<column hflex="2"/>
					</columns>
				</grid>
				<listbox id="listbox2" model="${model}" itemRenderer="${listitemRender}" style="white-space: nowrap;">
					<listhead>
						<listheader hflex="min"/>
						<listheader hflex="1"/>
						<listheader hflex="2"/>
					</listhead>
					
				</listbox>
				<tree id="tree2" model="${tmodel}" itemRenderer="${treeitemRender}" style="white-space: nowrap;">
					<treecols>
						<treecol hflex="min"/>
						<treecol hflex="1"/>
						<treecol hflex="2"/>
					</treecols>
				</tree>
			</div>
		</west>
		<center>
			<div>
				<button label="enlarge" xmlns:w="client"
				 w:onClick="jq(this.nextSibling.nextSibling)[0].style.width='300px';"/>
				<button label="resize back" onClick="Clients.resize(self.parent)"/>
				<div style="border: 1px solid blue" hflex="min">
				This is a div with min
				</div>
				<grid id="grid5" model="${model}" rowRenderer="${rowRender}" style="white-space: nowrap;" hflex="min">
				</grid>
				<listbox id="listbox5" model="${model}" itemRenderer="${listitemRender}" style="white-space: nowrap;" hflex="min">
				</listbox>
				<tree id="tree5" model="${tmodel}" itemRenderer="${treeitemRender}" style="white-space: nowrap;" hflex="min">
				</tree>
			</div>
		</center>
		<east splittable="true" width="300px">
			<div>
				<grid id="grid3" model="${model}" rowRenderer="${rowRender}" style="white-space: nowrap;" hflex="min">
					<columns>
						<column label="column 1" hflex="min"/>
						<column label="column 2" hflex="min"/>
						<column label="column 3" hflex="min"/>
					</columns>
				</grid>
				<listbox id="listbox3" model="${model}" itemRenderer="${listitemRender}" style="white-space: nowrap;" hflex="min">
					<listhead>
						<listheader label="column 1" hflex="min"/>
						<listheader label="column 2" hflex="min"/>
						<listheader label="column 3" hflex="min"/>
					</listhead>
					
				</listbox>
				<tree id="tree3" model="${tmodel}" itemRenderer="${treeitemRender}" style="white-space: nowrap;" hflex="min">
					<treecols>
						<treecol label="column 1" hflex="min"/>
						<treecol label="column 2" hflex="min"/>
						<treecol label="column 3" hflex="min"/>
					</treecols>
				</tree>
				<grid id="grid4" model="${model}" rowRenderer="${rowRender}" style="white-space: nowrap;" hflex="min">
					<columns>
						<column hflex="min"/>
						<column hflex="min"/>
						<column hflex="min"/>
					</columns>
				</grid>
				<listbox id="listbox4" model="${model}" itemRenderer="${listitemRender}" style="white-space: nowrap;" hflex="min">
					<listhead>
						<listheader hflex="min"/>
						<listheader hflex="min"/>
						<listheader hflex="min"/>
					</listhead>
					
				</listbox>
				<tree id="tree4" model="${tmodel}" itemRenderer="${treeitemRender}" style="white-space: nowrap;" hflex="min">
					<treecols>
						<treecol hflex="min"/>
						<treecol hflex="min"/>
						<treecol hflex="min"/>
					</treecols>
				</tree>
			</div>
		</east>
	</borderlayout>
	
</zk>