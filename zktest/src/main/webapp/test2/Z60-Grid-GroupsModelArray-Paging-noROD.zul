<?xml version="1.0" encoding="UTF-8"?>

<!--
Z60-Grid-GroupsModelArray-Paging-noROD.zul

	Purpose:
		
	Description:
		
	History:
		Wed Jan 18 09:30:05 TST 2012, Created by benbai

Copyright (C) 2012 Potix Corporation. All Rights Reserved.

-->
<zk>
	<zscript>
		<![CDATA[
		import org.zkoss.zktest.test2.select.models.*;
		import org.zkoss.zul.impl.*;

		GroupsModel model = GroupsModelArrays.getModel();
		GroupsModel model2 = GroupsModelArrays.getModel();

		int cnt = 0;
		int elemcnt = 0;

		public void showItems(String id, String gnum, Label msg) {
			Page page = msg.getPage();
			Grid lbx = page.getFellow(id);
			GroupsModel gm = ((GroupsListModel)lbx.getModel()).getGroupsModel();
			int gi = Integer.parseInt(gnum);
			String s = "";
			for (int i = 0; i < gm.getChildCount(gi); i++) {
				Object[] o = (Object[])gm.getChild(gi, i);
				s += o[1];
			}
			msg.setValue(s);
		}
		public void changePage(String id, String gnum, Page page) {
			Grid lbx = page.getFellow(id);
			lbx.setActivePage(getPageOfGroup(id, gnum, page));
		}
		public void checkClose(String id, String gnum, Label msg) {
			Page page = msg.getPage();
			Grid lbx = page.getFellow(id);
			GroupsModel gm = ((GroupsListModel)lbx.getModel()).getGroupsModel();
			int gi = Integer.parseInt(gnum);
			msg.setValue(gm.isClose(gi)+"");
		}
		public int getPageOfGroup(String id, String gnum, Page page) {
			Grid lbx = page.getFellow(id);
			GroupsModel gm = ((GroupsListModel)lbx.getModel()).getGroupsModel();
			int gi = Integer.parseInt(gnum);
			int idx = 0;
			for (int i = 0; i < gi; i++) {
				idx += 1;
				if (!gm.isClose(i))
					idx += gm.getChildCount(i);
			}
			return idx/lbx.getPageSize();
		}
	]]></zscript>
	<div>
		<div>** should remove this case after GroupsModelArray support ROD</div>
		<div>1. There are 3 Grid with Grouping below.</div>
		<div>2. For first two Grid, their open/close/sorting status will sync automatically after you open/close/sorting it.</div>
		<div>3. Close the Last Group of third Grid, if it can not be closed, it is a bug.</div>
		<div>4. Click clone and 'clone by serialization', then two Grids should be created and also closed the Last Group.</div>
		<div>5. Open the Last Group of the third Grid, the Last Group of the fourth and the fifth should not sync.</div>
		<div>6. Close the Itemset 0 and the Itemset 1 of the third Grid and click the "clone" and "clone by serialization".</div>
		<div>7. Open the Itemset 1 of the last two Grid, its content will open well (if it opens the Itemset 0's content, that is a bug).</div>
	</div>
	<custom-attributes org.zkoss.zul.grid.rod="false" />
	<hlayout>
    <grid id="grid" height="200px" width="310px" mold="paging" pageSize="5" model="${model}">
        <columns menupopup="auto">
            <column label="Category" sort="auto(0)"/>
            <column label="Name" sort="auto(1)"/>
            <column label="Calories" sort="auto(2)"/>
        </columns>
		<template name="model:group">
			<group open="${groupingInfo.open}">${each}</group>
		</template>
		<template name="model">
			<row>
				<label value="${each[0]}"/>
				<label value="${each[1]}"/>
				<label value="${each[2]}"/>
			</row>
		</template>
    </grid>
	
	<grid id="grid2" height="200px" width="310px" mold="paging" pageSize="5" model="${model}">
        <columns menupopup="auto">
            <column label="Category" sort="auto(0)"/>
            <column label="Name" sort="auto(1)"/>
            <column label="Calories" sort="auto(2)"/>
        </columns>
		<template name="model:group">
			<group open="${groupingInfo.open}">${each}</group>
		</template>
		<template name="model">
			<row>
				<label value="${each[0]}"/>
				<label value="${each[1]}"/>
				<label value="${each[2]}"/>
			</row>
		</template>
    </grid>
    </hlayout>
	<div height="10px"></div>
	
    <grid id="grid3" height="200px" width="310px" mold="paging" pageSize="5" model="${model2}">
         <columns menupopup="auto">
            <column label="Category" sort="auto(0)"/>
            <column label="Name" sort="auto(1)"/>
            <column label="Calories" sort="auto(2)"/>
        </columns>
		<template name="model:group">
			<group open="${groupingInfo.open}">${each}</group>
		</template>
		<template name="model">
			<row>
				<label value="${each[0]}"/>
				<label value="${each[1]}"/>
				<label value="${each[2]}"/>
			</row>
		</template>
    </grid>
    <hbox>
		<textbox id="tbOne" />
		<textbox id="tbTwo" />
		<button id="btnOne" label="change page" onClick="changePage(tbOne.getValue(), tbTwo.getValue(), self.getPage());" />
		<button id="btnTwo" label="show items" onClick="showItems(tbOne.getValue(), tbTwo.getValue(), msg);" />
		<button id="checkClose" label="check close" onClick="checkClose(tbOne.getValue(), tbTwo.getValue(), msg);" />
		<label id="msg" />
	</hbox>
	<button id="btnThree" label="clone">
		<attribute name="onClick">
			Grid sbx = grid3.clone();
			sbx.setId("sbxThree_clone" + cnt++);
			sbx.setParent(cloneThreeArea);
		</attribute>
	</button>
	<button id="btnFour" label="Clone by Serialization">
		<attribute name="onClick"><![CDATA[{
			import java.io.*;
			ByteArrayOutputStream boa = new ByteArrayOutputStream();
			new ObjectOutputStream(boa).writeObject(grid3);
			byte[] bs = boa.toByteArray();
			Object n = new ObjectInputStream(new ByteArrayInputStream(bs)).readObject();
			n.setId("sbxThree_serialize" + cnt++);
			((Component)n).setParent(cloneThreeArea);
		}]]></attribute>
	</button>
	<hbox id="cloneThreeArea" />
</zk>
