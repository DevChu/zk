	@Action(type = $event$)
	interface $interface$0 extends ActionHandler0 {}

	@Action(type = $event$)
	interface $interface$1<A> extends ActionHandler1<A> {}

	@Action(type = $event$)
	interface $interface$2<A, B> extends ActionHandler2<A, B> {}

	@Action(type = $event$)
	interface $interface$3<A, B, C> extends ActionHandler3<A, B, C> {}

	@Action(type = $event$)
	interface $interface$4<A, B, C, D> extends ActionHandler4<A, B, C, D> {}

	@Action(type = $event$)
	interface $interface$5<A, B, C, D, E> extends ActionHandler5<A, B, C, D, E> {}

	@Action(type = $event$)
	interface $interface$6<A, B, C, D, E, F> extends
			ActionHandler6<A, B, C, D, E, F> {}

	@Action(type = $event$)
	interface $interface$7<A, B, C, D, E, F, G> extends
			ActionHandler7<A, B, C, D, E, F, G> {}

	@Action(type = $event$)
	interface $interface$8<A, B, C, D, E, F, G, H> extends
			ActionHandler8<A, B, C, D, E, F, G, H> {}

	@Action(type = $event$)
	interface $interface$9<A, B, C, D, E, F, G, H, I> extends
			ActionHandler9<A, B, C, D, E, F, G, H, I> {}

	static $interface$0 $method$($interface$0 handler) {
		return handler;
	}

	static <A> $interface$1<A> $method$($interface$1<A> handler) {
		return handler;
	}

	static <A, B> $interface$2<A, B> $method$($interface$2<A, B> handler) {
		return handler;
	}

	static <A, B, C> $interface$3<A, B, C> $method$($interface$3<A, B, C> handler) {
		return handler;
	}

	static <A, B, C, D> $interface$4<A, B, C, D> $method$($interface$4<A, B, C, D> handler) {
		return handler;
	}

	static <A, B, C, D, E> $interface$5<A, B, C, D, E> $method$($interface$5<A, B, C, D, E> handler) {
		return handler;
	}

	static <A, B, C, D, E, F> $interface$6<A, B, C, D, E, F> $method$($interface$6<A, B, C, D, E, F> handler) {
		return handler;
	}

	static <A, B, C, D, E, F, G> $interface$7<A, B, C, D, E, F, G> $method$($interface$7<A, B, C, D, E, F, G> handler) {
		return handler;
	}

	static <A, B, C, D, E, F, G, H> $interface$8<A, B, C, D, E, F, G, H> $method$($interface$8<A, B, C, D, E, F, G, H> handler) {
		return handler;
	}

	static <A, B, C, D, E, F, G, H, I> $interface$9<A, B, C, D, E, F, G, H, I> $method$($interface$9<A, B, C, D, E, F, G, H, I> handler) {
		return handler;
	}
