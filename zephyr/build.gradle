plugins {
    id "java"
    id 'com.github.gmazzo.buildconfig'
    id 'idea'
}

idea {
    module {
        outputDir file("$buildDir/classes/main")
        testOutputDir file("$buildDir/classes/test")
    }
}

description = "Zephyr Core"
group = "org.zkoss.zephyr"

buildConfig {
    className = "Version"
    packageName = 'org.zkoss.zephyr'
    buildConfigField('String', 'UID', provider { "\"${project.version}\"" })
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

sourceSets {
    // include action_type.template for code generator (internal use)
    main.resources.srcDirs += [ "src/main/java" ]

	// add immutables code-gen for generating Javadoc
	main {
		compileClasspath += java.srcDir("$buildDir/generated/sources")
	}
}

dependencies {
    implementation project(':zul')
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "org.reflections:reflections:${reflectionsVersion}"
    implementation project(":zephyr-immutable")

    compileOnly "com.google.code.findbugs:jsr305:${jsr305Version}"
    compileOnly "javax.servlet:servlet-api:${servletVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
    testImplementation project(":zephyr-mock")

    annotationProcessor "org.immutables:value:$immutablesVersion"
	annotationProcessor project(":zephyr-processor")
    annotationProcessor project(":zephyr-immutable")
    compileOnly "org.immutables:value:$immutablesVersion"
}

test {
    useJUnitPlatform()

    filter {
        //include all tests from package
        includeTestsMatching "org.zkoss.zephyr.*"
    }

    project.gradle.startParameter.taskNames.each {
        if (it.contains("$project.name:test")) {
            // ignore "WARNING: Replicate resource: zephyr/html"
            sourceSets {
                main {
                    resources {
                        exclude 'metainfo/**'
                    }
                }
            }
        }
    }
}